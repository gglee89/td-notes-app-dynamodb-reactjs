import { Note } from '../../action-creators';
import AuthService from '../auth/auth.service';

type RequestHeaderOptions = {
  headers?: any;
};

export class NotesApiService {
  options: RequestHeaderOptions = {};

  constructor(private authService: AuthService) {
    this.setOptions();
  }

  /**
   * @description Get the `id_token` from the AuthService,
   *              and set the HTTP header options with
   *              the Authorization token.
   *
   *              For production grade applications,
   *              all communications must happen within a
   *              secure communication (i.e. SSL)
   *
   *              We call setOptions() in all methods
   *              that requires Authentication.
   */
  setOptions = async () => {
    const idToken = await this.authService.getIdToken();
    if (idToken) {
      this.options.headers = {
        Authorization: idToken,
      };
    }
  };

  addNote = (item: Note) => {
    this.setOptions();
    const endpoint = `${process.env.API_ROOT}/api/note`;
  };

  updateNote = (item: Note): void => {
    this.setOptions();
  };

  deleteNote = (timestamp: number): void => {
    this.setOptions();
  };

  getNotes = (start?: number): void => {
    this.setOptions();
  };
}
